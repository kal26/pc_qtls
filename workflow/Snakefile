import os 
import sys
import pandas as pd

# input paths
tissue_id_path = config['tissue_id_path']
covariates_dir = config['covariates_dir']
expression_dir = config['expression_dir']
chr_list_path = config['chr_list_path']
genotype_stem = config['genotype_stem']

# output paths
filtered_expression_output_dir = config['filtered_expression_output_dir']
clusters_dir = config['clusters_dir']
eqtl_output_dir = config['eqtl_output_dir']
pcqtl_output_dir = config['pcqtl_output_dir']
pc_output_dir = config['pc_output_dir']
overlap_output_dir = config['overlap_output_dir']
annotations_output_dir = config['annotations_output_dir']

# cluster params
max_cluster_size = 50
min_cluster_size = 2
min_corr_cutoff = config['min_corr_cutoff']
percent_corr_cutoff = float(config['percent_corr_cutoff'])
cutoff_type = config['cutoff_type']


# null params
null_sizes=[2,3,4,5]

# annotation paths
gencode_path = config['gencode_path']
full_abc_path = config['full_abc_path']
abc_match_path = config['abc_match_path']
ctcf_match_path = config['ctcf_match_path']
ctcf_dir = config['ctcf_dir'] 
paralog_path = config['paralog_path']
go_path = config['go_path']
cross_map_path = config['cross_map_path']
tad_path = config['tad_path']
avg_expression_path = config['avg_expression_path']

# coloc paths
coloc_output_dir = config['coloc_output_dir']
gwas_meta = config['gwas_meta']
gtex_meta = config['gtex_meta']
gwas_folder = config['gwas_folder']

# load in all the wildcards
df = pd.read_csv(tissue_id_path, header=0)
tissue_ids = list(df['Tissue'])

df = pd.read_csv(chr_list_path, header=0)
chr_list = list(df['chr_id'])

gwas_meta_df = pd.read_csv(gwas_meta, sep='\t', header=0)
gwas_ids = list(gwas_meta_df['Tag'])

# subsample to test
#tissue_ids = ['Artery_Tibial']
use_susie = "True"

include: 'rules/pcqtl.smk'
include: 'rules/eqtl.smk'
include: 'rules/annotate.smk'
include: 'rules/clusters.smk'
include: 'rules/coloc.smk'



print('Running on tissues:{}'.format(tissue_ids))


rule all:
    input:
        #clusters = expand(clusters_dir + '{TISSUE}_clusters_all_chr.csv', TISSUE = tissue_ids),
        annotated_clusters = expand(annotations_output_dir + '{TISSUE}/{TISSUE}_clusters_annotated.csv', TISSUE = tissue_ids),
        annotated_nulls =  expand(annotations_output_dir + '{TISSUE}/{TISSUE}_null_{CLUSTER_SIZE}genes_annotated.csv', TISSUE = tissue_ids, CLUSTER_SIZE = null_sizes),
        pcqtl_susie = expand(pcqtl_output_dir + '{TISSUE}/{TISSUE}.v8.pcs.susie.txt', TISSUE = tissue_ids),
        #pc_permutation = expand(pcqtl_output_dir + '{TISSUE}/{TISSUE}.v8.pcs.cis_independent_qtl.txt.gz', TISSUE = tissue_ids),
        #pcqtl_nominal = expand(pcqtl_output_dir + '{TISSUE}/{TISSUE}.v8.pcs.cis_qtl_pairs.{CHROM}.parquet', CHROM=chr_list, TISSUE=tissue_ids),
        eqtl_susie = expand(eqtl_output_dir + '{TISSUE}/{TISSUE}.v8.cluster_genes.susie.txt', TISSUE = tissue_ids),
        #eqtl_permutation = expand(eqtl_output_dir + '{TISSUE}/{TISSUE}.v8.cluster_genes.cis_independent_qtl.txt.gz', TISSUE=tissue_ids),
        #eqtl_nominal = expand(eqtl_output_dir + '{TISSUE}/{TISSUE}.v8.cluster_genes.cis_qtl_pairs.{CHROM}.parquet', CHROM=chr_list, TISSUE=tissue_ids),
        #cluster_list = expand(coloc_output_dir + '{TISSUE}/temp/{TISSUE}.{CHROM}.cluster_list.txt', CHROM=chr_list, TISSUE=tissue_ids)
        #coloc_pairs = expand(coloc_output_dir + 'pairs/{TISSUE}.v8.pairs_coloc.txt', TISSUE=tissue_ids), 
        gwas_colocs = expand(coloc_output_dir + 'gwas/{TISSUE}/{TISSUE}.v8.{GWAS}.susie_{USE_SUSIE}.gwas_coloc.txt', TISSUE=tissue_ids, GWAS=gwas_ids, USE_SUSIE=use_susie),
        pcqtl_susie_pairs = expand(pcqtl_output_dir + '{TISSUE}/{TISSUE}.v8.pcs.susie_R.txt', TISSUE=tissue_ids), 
        eqtl_susie_pairs = expand(eqtl_output_dir + '{TISSUE}/{TISSUE}.v8.cluster_genes.susie_R.txt', TISSUE=tissue_ids), 
        susie_var_annot = expand(annotations_output_dir + '{TISSUE}/{TISSUE}.v8.susie_R_vars.annotated.csv', TISSUE = tissue_ids)
        #pc_annotated = expand(annotations_output_dir + '{TISSUE}/{TISSUE}.v8.pcs_annotated.txt', TISSUE = tissue_ids)
    